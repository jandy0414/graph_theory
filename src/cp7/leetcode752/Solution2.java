package cp7.leetcode752;

import java.util.*;

public class Solution2 {

    public int openLock(String[] deadends,String target){

        HashSet<String> deadset=new HashSet<>();

        for(String s:deadends){
            deadset.add(s);
        }

        if(deadset.contains(target)){
            return -1;
        }
        if(deadset.contains("0000")){
            return -1;
        }
        if(target.equals("0000")){
            return 0;
        }

        //bfs
        Queue<String> queue=new LinkedList<>();
        HashMap<String,Integer> visited =new HashMap<>();
        queue.add("0000");
        visited.put("0000",0);
        while (!queue.isEmpty()){
            String curs=queue.remove();
            char[] curArray=curs.toCharArray();

            ArrayList<String> nexts =new ArrayList<>();
            for(int i=0;i<4;i++){
                char o = curArray[i];
                curArray[i]=Character.forDigit((curArray[i]-'0'+1)%10,10);
                nexts.add(new String(curArray));
                curArray[i]=o;
                curArray[i]=Character.forDigit((curArray[i]-'0'+9)%10,10);
                nexts.add(new String(curArray));
                curArray[i]=o;
            }
            //todo:nexts

            for(String next:nexts){
                if(!deadset.contains(next) && !visited.containsKey(next)){
                    queue.add(next);
                    visited.put(next,visited.get(curs)+1);

                    if(next.equals(target)){
                        return visited.get(next);
                    }
                }
            }
        }
        return -1;
    }

    public static void main(String[] args) {
        String s="0000";
        Solution2 solution=new Solution2();

//        String[] input={"0201","0101","0102","1212","2002"};
//        String target="0202";

        String[] input={"4162","4112","8950","5450","2201","6607",
                "4995","8541","3724","0475","1357","2433","7028",
                "3271","9666","5861","9028","5562","9637","6900",
                "7727","5386","3235","3096","9721","9236","1612",
                "2572","3447","4644","0774","8564","7304","5612",
                "4593","0926","0132","4162","7982","3872","5738",
                "8375","2899","9357","6871","7731","5679","8323",
                "5761","9752","6311","5917","9293","8764","2486",
                "9156","4879","3016","0327","2940","2951","8787",
                "5114","0295","8598","5781","7901","4096","8165",
                "5547","1131","8371","7192","1570","7729","7319",
                "4348","9924","6183","3592","6539","8650","9974",
                "2110","1512","5780","6369","0794","4475","5157",
                "7859","2891","8510","4564","1270","4684","7773",
                "6543","1657","1468","6273","4873","5113","7760",
                "5664","9749","1320","6048","7995","0681","0873",
                "6832","9674","5162","8996","0896","6131","9479",
                "3467","2327","7239","9197","4467","8564","6972",
                "1911","9490","5011","6335","2719","7314","4039",
                "8273","3059","9257","6289","5122","7028","9299",
                "8047","6845","2052","2898","1903","9301","0284",
                "1778","2138","4876","8753","0296","8863","1306",
                "9961","4643","5635","8817","5460","9472","8524",
                "3511","8767","6017","1029","9442","4938","5802",
                "1099","2914","5036","5632","1943","3784","1202",
                "4522","8494","4373","0322","6605","1391","9720",
                "0086","9489","8644","0898","8316","0028","6081",
                "6517","4085","3484","6169","4212","4821","4078",
                "3839","7243","9713","7878","8976","0920","4287","0389",
                "6741","1934","3010","8333","4805","1009","7029","7468","5319","3557","4071","2689",
                "7547","0809","8537","3487","7029","8799","3387","7076","1234","3942","4324","8127",
                "0159","0813","5333","3585","7652","9587","9939","2259","4190","9520","3635","4785",
                "6520","1393","6769","2912","8860","0284","5437","4202","1619","9054","2389","2247",
                "6949","8195","1533","9215","1487","0451","1453","2970","8592","5261","8157","9357",
                "0913","7526","8861","9942","5945","7733","1268","2398","8511","0819","9253","3842",
                "0979","8448","8235","4156","5261","4270","9997","2596","7500","0066","2026","1125",
                "5049","2049","2066","4790","5505","6552","2658","1876","0236","4177","9330","0953",
                "9737","5141","9916","1589","1414","3845","8556","2595","7854","8834","0561","8109",
                "2973","1528","1217","0588","3951","9702","6137","7013","9594","6481","1565","6266",
                "8636","7489","3685","0524","8231","1402","1875","4691","7425","9816","3746","6486",
                "5236","6992","9154","6154","3700","0038","5738","4629","9020","9509","0097","4286",
                "5674","8566","5726","6846","3160","4917","4935","6200","9078","8307","7544","3494",
                "3837","9214","6713","1920","6194","9353","9828","8759","9984","6545","8335","6358",
                "4430","1236","9496","6941","2730","9220","6520","2560","5950","5613","8637","7056",
                "5658","9097","4443","3100","6648","2059","6595","1145","8867","2525","8664","3074",
                "2046","1742","6490","8806","5879","8207","8967","4810","2164","1214","0702","3514",
                "5838","6660","9804","5678","8626","7785","6499","0572","6199","2649","4869","1700",
                "2884","6156","1336","1255","7734","0027","5131","0591","0485","9950","1505","8162",
                "8001","6075","1268","3483","8082","3337","0734","5930","6184","3184","7944","8076",
                "4102","3664","9646","0807","5431","0986","0931","1877","2793","3628","5160","8856",
                "3692","3569","7698","3564","1023","3987","6237","2615","0008","7838","3850","9047",
                "9158","5023","4519","3822","2526","8071","8134","2807","0493","5638","9894","5959",
                "7028","5011","9026","3892","5770","3025","8106","5823","9274","2635","8648","9660",
                "4834","6390","1401","8160","4471","1832","2219","1495","2512"};
        String target="9003";
        long start=System.currentTimeMillis();
        int out=solution.openLock(input,target);
        System.out.println(out);
        long end=System.currentTimeMillis();
        long use=(end-start);
        System.out.println("用时："+use);
    }

}
